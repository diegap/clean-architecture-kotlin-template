description = "Integration tests for checking entrypoints and dataproviders"

dependencies {
    compile project(":application:infrastructure:configuration")
    compile libs.integration_test
}

// -- integration test task -- //
sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/test/kotlin')
        }
        resources.srcDir file('src/test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    useTestNG {
        suites 'src/test/resources/testng.xml'
    }
}

check.dependsOn integrationTest
// -- integration test task -- //

compileIntegrationTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

integrationTest {

    useTestNG()
    include '**/*IT.*'

    // make gradle print the test result for each test in the build (we like to see the acceptance tests running)
    testLogging {
        events "passed", "skipped", "failed"
    }

    doFirst {
        println ">>> integration-test starting <<<"
    }


    doLast {
        println ">>> integration-test finishing <<<"
    }
}

integrationTest.mustRunAfter(":application:infrastructure:dataprovider:test")
